rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Rule 1: Allow admin/receptionist to write to 'coupons' and 'users' if authenticated
    // This rule applies to real Firebase authenticated users with the correct role in their user document.
    match /coupons/{couponId} {
      allow write: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'receptionist');
      allow read: if true; // Anyone can read coupons
    }

    // Rule 2: Allow unauthenticated requests to create coupons IF createdByUid matches hardcoded admin/receptionist UIDs
    // This rule is for your hardcoded test users.
    match /coupons/{couponId} {
      allow create: if request.auth == null && (request.resource.data.createdByUid == 'hardcoded_admin_id_123' || request.resource.data.createdByUid == 'hardcoded_receptionist_id_456');
    }

    // Rule 3: Allow users to read and update their own user document
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      // Allow creation of user documents for new sign-ups (if not already existing)
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // Rule 4: Allow anyone to read user documents for analytics (e.g., total users count)
    // Be cautious with this in a real app; consider more granular access.
    match /users/{userId} {
      allow read: if true;
    }
  }
}